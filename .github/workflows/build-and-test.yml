name: Build and Test
on: [push]

env:
  PVAULT_SERVICE_LICENSE: ${{ secrets.PVAULT_SERVICE_LICENSE }}

jobs:
#  test-python:
#    name: Test Python - Getting Started.
#    runs-on: ubuntu-latest
#    steps:
#      - name: Check Out Repo.
#        uses: actions/checkout@v3
#
#      - name: Install python
#        uses: actions/setup-python@v4
#
#      - name: Prepare.
#        run: |
#          cd python
#          ./prepare.sh
#
#      - name: Start Vault and tests.
#        run: |
#          docker run --rm \
#            --name pvault-dev \
#            -p 8123:8123 \
#            -e PVAULT_DEVMODE=true \
#            -e PVAULT_SERVICE_LICENSE=${PVAULT_SERVICE_LICENSE} \
#            -d \
#            piiano/pvault-dev:0.9.8
#          sleep 60
#          cd python
#          ./run.sh
  test-java:
    name: Test Java - Getting Started.
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repo.
        uses: actions/checkout@v3

      - name: Install java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      - name: Prepare.
        run: |
          cd java
          ./prepare.sh
#          curl -o openapi.json https://piiano.com/docs/assets/openapi.json
#          docker run --rm -v "${PWD}:/local" openapitools/openapi-generator-cli:v6.1.0 generate \
#              -i local/openapi.json \
#              -g java \
#              -o local/vault_java_sdk
#          cd vault_java_sdk
#          mvn -B package --file pom.xml

#      - name: Start Vault and tests.
#        run: |
#          docker run --rm \
#            --name pvault-dev \
#            -p 8123:8123 \
#            -e PVAULT_DEVMODE=true \
#            -e PVAULT_SERVICE_LICENSE=${PVAULT_SERVICE_LICENSE} \
#            -d \
#            piiano/pvault-dev:0.9.8
#          sleep 60
#          cd java
#          ls
#          cd src/main/java
#          ls
#          java PvaultGettingStarted.java
